http://localhost:8181/web-study-02/hello
-http://localhost:8181 : 웹서버를 의미합니다.
-/web-study-02 : 컨텍스트 패스입니다.
-/hello : 서블릿 요청 URL 패턴입니다.

컨텍스트 패스
-웹서버에서 제공하는 다양한 웹 애플리케이션을 구분하기 위해서 사용하는 것.
-하나의 웹 서버는 다양한 서비스를 제공할 수 있으며 각각의 서비스는 개별적인 웹 애플리케이션으로 작성됩니다.

URL Mapping
-서블릿을 요청하기 위해 사용하는 문자열을 서블릿 클래스와 매핑시키는 것.
-URL Mapping을 통해서 실제 서블릿 클래스명을 감출 수 있어 보안에 용이합니다.
-사용자는 서블릿 호출을 위해서 디렉토리 구조를 알 필요가 없어집니다.

스트림
-데이터를 메모리에 입력하거나, 메모리에서 데이터를 꺼내서 출력하는 과정이 가능하도록 하는 객체

서블릿 동작 원리
-요청 : 클라이언트 -> 웹 서버 -> 서블릿 컨테이너 -> 스레드 -> 서블릿 객체
-응답 : 클라이언트 <- 웹 서버 <- 서블릿 컨테이너 <- 스레드 <- 서블릿 객체

서블릿의 사이프 사이클
-서블릿 인스턴스를 처음 생성해서 메모리에 남겨두고 재사용하기 때문에, 인터프리터 방식으로 동작하는 ASP, PHP보다 속도가 빠릅니다.
-서블릿 인스턴스 생성시 최초 한번만 호출 : init(), destroy()
-서블릿 인스턴스 요청될 때마다 호출 : doGet() 또는 doPost()

쿼리 스트링
-사용자가 입력한 데이터를 서버로 전달하는 가장 단순한 방법
-get 방식으로 요청 했을 때, URL 주소 뒤에 다음과 같이 "리소스?이름=값"의 형식으로 붙입니다.
-페이지 사이에 정보 교환이 필요한 경우에 유용합니다.

contentType내의 charset
-웹브라우저가 받아볼 페이지의 캐릭터셋을 의미

pageEncoding
-JSP 소스코드의 캐릭터셋을 의미

사용자가 폼에 입력한 데이터가 유효해야만 이를 서버에서 정상 처리할 수 있기 때문에 서버로 보내기 전에 입력된 데이터가 유효한지(올바른지)
판단하여 유효하지 않으면 사용자가 다시 데이터를 입력하도록 유도해야 한다.

출력할 한글 데이터 값 깨짐 방지
-서블릿에서 response.setContentType("text/html;charset=UTF-8"); 을 입력해준다.
-JSP의 첫줄을 <%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>로 수정해준다.

get방식으로 입력 받은 한글 데이터 값 깨짐 방지
-서버 설정 파일인 server.xml 파일에서 <Connector> 태그를 찾아 URIEncoding="UTF-8"을 추가해준다.

post방식으로 입력 받은 한글 데이터 값 깨짐 방지
-서블릿에서 request.setCharacterEncoding("UTF-8"); 를 입력해준다.
